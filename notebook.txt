这期实现这个功能当用户点击各个 SKU 的时候价格和剩余库存变化因为vue3和laravel10并没有jQuery，所以$的js全局并不能使用，而且导入麻烦，所以索性使用新的Js代码或者Vue3组件直接
解决这个问题，比如期实现当用户点击各个 SKU 的时候价格和剩余库存变化，原版是可以通过以下代码逻辑实现：
.
.
.
@foreach($product->skus as $sku)
  <label
      class="btn sku-btn"
      data-price="{{ $sku->price }}"
      data-stock="{{ $sku->stock }}"
      data-toggle="tooltip"
      title="{{ $sku->description }}"
      data-placement="bottom">
    <input type="radio" name="skus" autocomplete="off" value="{{ $sku->id }}"> {{ $sku->title }}
  </label>
@endforeach
.
.
.
@section('scriptsAfterJs')
<script>
  $(document).ready(function () {
    $('[data-toggle="tooltip"]').tooltip({trigger: 'hover'});
    $('.sku-btn').click(function () {
      $('.product-info .price span').text($(this).data('price'));
      $('.product-info .stock').text('库存：' + $(this).data('stock') + '件');
    });
  });
</script>
@endsection
但是$没法用，所以这里我们使用新的Js逻辑来实现，当然这里还可以使用Vue3组件来实现这个功能，使用 Vue 的响应式系统来动态更新价格和库存信息，而不是直接操作 DOM。
果您的页面或应用主要基于 Vue 构建，则建议使用 Vue 的方法。如果是一个主要由服务器渲染的页面，并且只需要少量的交互，那么使用纯 JavaScript 也是一个很好的选择。


//关闭未支付订单时，docker redis的导入可使用在web.php中添加路由：

use Illuminate\Support\Facades\Redis;

Route::get('/redis-test', function () {
    Redis::set('test', 'value');
    return Redis::get('test');
});
如果页面有value出现则代表已成功带入redis

//Class ‘Symfony\Bridge\PsrHttpMessage\Factory\HttpFoundationFactory’ Not Found
解决方案：composer require symfony/psr-http-message-bridge

//Yansongda\Pay3.5版本，报错解决[\Yansongda\Pay\Plugin\Alipay\Shortcut\VerifyShortcut] is not incompatible
新版的 verify 改成了 callback 方法
详情：https://github.com/yansongda/pay/issues/654

//Yansongda\Pay3.4回调地址无效的解决方法
教程中是

$config['notify_url'] = route('payment.alipay.notify');
$config['return_url'] = route('payment.alipay.return');
新版的是这样

$config['alipay']['default']['notify_url'] = route('payment.alipay.notify');
$config['alipay']['default']['return_url'] = route('payment.alipay.return');
